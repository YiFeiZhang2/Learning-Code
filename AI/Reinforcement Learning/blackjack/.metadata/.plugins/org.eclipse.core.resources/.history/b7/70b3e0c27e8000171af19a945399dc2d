
// An Ace is 1, but can be 11 if that does not make the hand bust
// State S of the entire game
// Action A is either True (hit) or False (stay)
class State {
	/* card is the dealer's shown card
	 * val is the total value of the player's hand
	 * usable is whether the player has a usable ace
	 */
	int card;
	int val;
	boolean usable;
	
	State (int card, int val, boolean usable){
		this.card = card;
		this.val = val;
		this.usable = usable;
	}
	
	// True is the player, False is the dealer
	public Hand getHand (boolean player){
		Hand hand = new Hand();
		return hand;
	}
}

// Hand represents either player's hand
class Hand {
	/* cards is a list of cards in hand
	 * total is the sum of cards (Ace is 1)
	 * ace represents whether the hand has an ace or not
	 */
	int total;
	boolean ace;
	
	Hand (){
		this.total = 0;
		this.ace = false;
	}
	
	Hand (int total, boolean hasAce){
		this.total = total;
		this.ace = hasAce;
	}
	
	public void addCard (int card){
		this.total += card;
		if (card == 1){
			this.ace = true;
		}
	}
	
	public boolean hasUsableAce (){
		return (this.ace && (this.total + 10 <= 21));
	}
	
	public int value (){
		if (this.hasUsableAce()){
			return (this.total+10);
		} else {
			return this.total;
		}
	}
}